# Use official PHP 8.2 with Apache and FPM
FROM php:8.2-fpm

# Install system dependencies
RUN apt-get update && apt-get install -y \
    apache2 \
    libicu-dev \
    libonig-dev \
    libzip-dev \
    unzip \
    zip \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libwebp-dev \
    libjpeg62-turbo-dev \
    libpq-dev \
    && docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp \
    && docker-php-ext-install -j$(nproc) \
        intl \
        mbstring \
        pdo \
        pdo_pgsql \
        pgsql \
        zip \
        gd \
        opcache \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Configure Apache to work with PHP-FPM
RUN a2enmod proxy_fcgi setenvif rewrite headers
RUN a2enconf php8.2-fpm

# Set environment variables
ENV APACHE_DOCUMENT_ROOT /var/www/html/public
ENV APACHE_RUN_USER www-data
ENV APACHE_RUN_GROUP www-data
ENV APACHE_LOG_DIR /var/log/apache2
ENV APACHE_RUN_DIR /var/run/apache2
ENV APACHE_LOCK_DIR /var/lock/apache2
ENV APACHE_PID_FILE /var/run/apache2/apache2.pid

# Create necessary directories
RUN mkdir -p ${APACHE_RUN_DIR} ${APACHE_LOCK_DIR} ${APACHE_LOG_DIR} \
    && chown -R www-data:www-data ${APACHE_RUN_DIR} ${APACHE_LOCK_DIR} ${APACHE_LOG_DIR}

# Copy custom Apache configuration
COPY apache-config.conf /etc/apache2/sites-available/000-default.conf

# Configure PHP
RUN { \
    echo 'upload_max_filesize = 64M'; \
    echo 'post_max_size = 64M'; \
    echo 'memory_limit = 256M'; \
    echo 'max_execution_time = 300'; \
    echo 'max_input_vars = 3000'; \
    echo 'date.timezone = UTC'; \
    echo 'session.save_path = "/tmp"'; \
    echo 'session.cookie_httponly = 1'; \
    echo 'session.cookie_secure = 1'; \
    echo 'session.use_strict_mode = 1'; \
} > /usr/local/etc/php/conf.d/uploads.ini

# Create required directories and set proper permissions
RUN mkdir -p ${APACHE_DOCUMENT_ROOT} ${APACHE_DOCUMENT_ROOT}/../logs ${APACHE_DOCUMENT_ROOT}/../storage/logs \
    && mkdir -p ${APACHE_DOCUMENT_ROOT}/../storage/framework/{sessions,views,cache} \
    && mkdir -p ${APACHE_DOCUMENT_ROOT}/../bootstrap/cache \
    && chown -R www-data:www-data ${APACHE_DOCUMENT_ROOT}/.. \
    && chmod -R 775 ${APACHE_DOCUMENT_ROOT}/../storage ${APACHE_DOCUMENT_ROOT}/../bootstrap/cache

# Set working directory
WORKDIR /var/www/html

# Copy application files with correct ownership
COPY --chown=www-data:www-data . .

# Ensure the storage directory is writable
RUN chown -R www-data:www-data storage \
    && chmod -R 775 storage \
    && chmod -R 775 bootstrap/cache

# Copy and set execute permission for entrypoint
COPY start.sh /usr/local/bin/start.sh
RUN chmod +x /usr/local/bin/start.sh

# Expose port 10000 (Render's default port for Docker containers)
EXPOSE 10000

# Start Apache and PHP-FPM
CMD ["/usr/local/bin/start.sh"]
